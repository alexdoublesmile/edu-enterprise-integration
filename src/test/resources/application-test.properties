spring.main.banner-mode=off

server.port=8081

response.attempt.limit=3

cache.expired.hours=${CACHE_EXPIRED_HOURS:24}

spring.rabbitmq.host=${TEST_RABBIT_HOST:localhost}
spring.rabbitmq.port=${TEST_RABBIT_PORT:5672}
spring.rabbitmq.username=${TEST_RABBIT_USERNAME:guest}
spring.rabbitmq.password=${TEST_RABBIT_PASSWORD:guest}

spring.cloud.stream.bindings.output.destination=tasksExchange
spring.cloud.stream.bindings.input.group=tasksQueue
spring.cloud.stream.bindings.input.consumer.maxAttempts=1
spring.cloud.stream.bindings.delayOutput.destination=delayExchange
spring.cloud.stream.default.contentType=application/json

spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://${TEST_DB_HOST:localhost}:${TEST_DB_PORT:5432}/${TEST_DB_NAME:postgres}
spring.datasource.username=${TEST_DB_USERNAME:postgres}
spring.datasource.password=${TEST_DB_PASSWORD:mysecretpassword}
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop

adapter.url=http://${ADAPTER_HOST:localhost}:${ADAPTER_PORT:8180}
path=/

simple.request.path=/request
find.simple.path.template=/findMessageByClientId/%s

id.min.length=3
id.max.length=24
id.size.error.message=id can't contain less than %s digits & more than %s digits
id.format.error.message=id should contain digits only
id.blank.error.message=id can't be empty
id.not.found.error.message=id wasn't found

